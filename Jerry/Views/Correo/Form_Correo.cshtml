@model Jerry.Models.Correo

@{
    bool editMode = Model.correoID>0;
    ViewBag.Title = "Configuracion de Correo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div>
    <a href="@Url.Action("Details", new { id = Model.correoID})">
        <i class="fa fa-arrow-left"></i><span>Volver a configuraciones</span>
    </a>
</div>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">@ViewBag.Title</h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.correoID)
                <div class="form-group">
                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.correoAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.correoAdmin, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.correoAdmin, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.contrasena, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.contrasena, new {
                       htmlAttributes = new { @class = "form-control", type = "password", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.contrasena, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.smtpHost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.smtpHost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.smtpHost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.puertoCorreo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.puertoCorreo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.puertoCorreo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sslEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.sslEnabled, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.sslEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-success">Guardar</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>