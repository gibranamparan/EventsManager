@using Jerry.Models
@model Jerry.Models.Reservacion
@{ 
    Model.fechaReservacion = DateTime.Now;
    Model.fechaEventoInicial = DateTime.Now.AddMonths(1);
    Model.fechaEventoFinal = Model.fechaEventoInicial.AddDays(1);
}
@using (Html.BeginForm("create", "Reservacion"))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-primary">
        <div class="panel-heading" onclick="changeIcon(this)"
             data-toggle="collapse" data-target="#reservasTable">
            <span class="panel-title">
                Crear Reservación
            </span>
            <i class="pull-right fa fa-window-minimize"></i>
        </div>
        <div class="panel-body collapse" id="reservasTable">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model=>model.clienteID)
                @Html.HiddenFor(model => model.fechaReservacion)

                <div class="form-group">
                    @Html.LabelFor(model => model.fechaEventoInicial, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fechaEventoInicial, new { htmlAttributes = new { @class = "form-control", id = "fechas" } })
                        @Html.ValidationMessageFor(model => model.fechaEventoInicial, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.fechaEventoFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fechaEventoFinal, new { htmlAttributes = new { @class = "form-control", id = "fechas" } })
                        @Html.ValidationMessageFor(model => model.fechaEventoInicial, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.costo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.costo, new { htmlAttributes = new { @class = "form-control", data_mask = "0000000000.00", data_mask_reverse = "true" } })
                        @Html.ValidationMessageFor(model => model.costo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Detalles, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Detalles, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Detalles, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.salonID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("salonID", Salon.getSalonesSelectList(), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.salonID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoContrato, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TipoContrato",Reservacion.getTipoContratoSelectList(), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoContrato, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Reservar" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>      
}
   
        
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("input[type='datetime']").datetimepicker();
    </script>
    <script>
        $('input#fechas').blur(function () {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("ReservacionesConflictivas", "Reservacion")",
                success: function (resultado) {
                    //$("#tablaCargada").remove('.rowData');
                    var trs = $("#tablaCargada tr").length;
                    if (trs > 1) {
                        // Eliminamos la ultima columna
                        $("#tablaCargada tr:last").remove();
                    }
                    $("#tablaCargada").parent("tr").remove();
                    var datos = resultado[0];
                    var newR = $('<tr>').addClass('rowData');
                    $('<td>').html(datos.nombre).appendTo(newR);
                    $('<td>').html(datos.nombreSalon).appendTo(newR);
                    $('<td>').html(datos.fechaEventoInicial).appendTo(newR);
                    newR.appendTo("#tablaCargada");
                }
            });

        });
    </script>
}
