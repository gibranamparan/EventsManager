@using Jerry.Models
@model Jerry.Models.Banquete

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <a href="@Url.Action("Index")">
        <i class="glyphicon glyphicon-arrow-left"></i> Regresar a Lista Banquetes
    </a>
</div>
<br />
<br />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="panel panel-info">
        <div class="panel-heading">
            Nuevo Banquete
        </div>
        <div class="panel-body">
            <div class="col-md-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.fechaBanquete)
                        @Html.EditorFor(model => model.fechaBanquete, new { htmlAttributes = new { @class = "form-control", id = "fechas" } })
                        @Html.ValidationMessageFor(model => model.fechaBanquete, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.email)
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.telefono)
                        @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.cantidadPersonas)
                        @Html.EditorFor(model => model.cantidadPersonas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cantidadPersonas, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.costo)
                        @Html.EditorFor(model => model.costo, new { htmlAttributes = new { @class = "form-control", data_mask = "0000000000.00", data_mask_reverse = "true" } })
                        @Html.ValidationMessageFor(model => model.costo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.tipoContrato)
                        @Html.DropDownList("TipoContrato", Banquete.getTipoContratoSelectList(), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.tipoContrato, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="row">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.descripcionServicio, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.descripcionServicio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.descripcionServicio, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.clienteID, "clienteID")
                        @Html.DropDownList("clienteID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.clienteID, "", new { @class = "text-danger" })
                    </div>
                </div>
                

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
            $("input[type='datetime']").datetimepicker();
    </script>
    <script>
            $('input#fechas').blur(function () {
                $.ajax({
                    type: 'GET',
                    url: "@Url.Action("ReservacionesConflictivas", "Reservacion")",
                    success: function (resultado) {
                        //$("#tablaCargada").remove('.rowData');
                        var trs = $("#tablaCargada tr").length;
                        if (trs > 1) {
                            // Eliminamos la ultima columna
                            $("#tablaCargada tr:last").remove();
                        }
                        $("#tablaCargada").parent("tr").remove();
                        var datos = resultado[0];
                        var newR = $('<tr>').addClass('rowData');
                        $('<td>').html(datos.nombre).appendTo(newR);
                        $('<td>').html(datos.nombreSalon).appendTo(newR);
                        $('<td>').html(datos.fechaEventoInicial).appendTo(newR);
                        newR.appendTo("#tablaCargada");
                    }
                });

            });
    </script>
}
